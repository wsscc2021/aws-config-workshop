
Resources:
  ############################################################################
  # Resources for AWS Config Demo                                            #
  ############################################################################
  Key:
    Type: AWS::KMS::Key
    Properties: 
      # Description: String
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy: 
        Version: 2012-10-17
        Id: key-default-1
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'
      # KeySpec: String
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: 7
      Tags: 
        - Key: key01
          Value: value01

  # S3 Bucket (for Logging)
  LogBucket:
    Type: AWS::S3::Bucket
    Properties: 
      # BucketName: useast1-example-bucket
      ObjectLockEnabled: false
      OwnershipControls: 
        Rules: 
          - ObjectOwnership: BucketOwnerEnforced # BucketOwnerEnforced , ObjectWriter , BucketOwnerPreferred
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption: 
        ServerSideEncryptionConfiguration: 
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault: 
              SSEAlgorithm: AES256 # AES256 , aws:kms
              # KMSMasterKeyID: !GetAtt Key.Arn
      VersioningConfiguration: 
        Status: Enabled # Enabled , Suspended
  
  # S3 Bucket (for Compliant)
  CompliantBucket:
    Type: AWS::S3::Bucket
    Properties: 
      # BucketName: useast1-example-bucket
      ObjectLockEnabled: false
      OwnershipControls: 
        Rules: 
          - ObjectOwnership: BucketOwnerEnforced # BucketOwnerEnforced , ObjectWriter , BucketOwnerPreferred
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption: 
        ServerSideEncryptionConfiguration: 
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault: 
              SSEAlgorithm: aws:kms # AES256 , aws:kms
              KMSMasterKeyID: !GetAtt Key.Arn
      VersioningConfiguration: 
        Status: Enabled # Enabled , Suspended

  # S3 Bucket (for Non-Compliant)
  NonCompliantBucket:
    Type: AWS::S3::Bucket
    Properties: 
      # BucketName: useast1-example-bucket
      ObjectLockEnabled: false
      OwnershipControls: 
        Rules: 
          - ObjectOwnership: BucketOwnerEnforced # BucketOwnerEnforced , ObjectWriter , BucketOwnerPreferred
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption: 
        ServerSideEncryptionConfiguration: 
          - BucketKeyEnabled: false
            # ServerSideEncryptionByDefault: 
            #   SSEAlgorithm: aws:kms # AES256 , aws:kms
            #   KMSMasterKeyID: !GetAtt Key.Arn
      VersioningConfiguration: 
        Status: Enabled # Enabled , Suspended
  
  # S3 Bucket Policy (for logging)
  LogBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref LogBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AWSLogBucketPermissionsCheck
            Effect: Allow
            Principal:
              Service:
                - config.amazonaws.com
            Action: s3:GetBucketAcl
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${LogBucket}"
          - Sid: AWSLogBucketDelivery
            Effect: Allow
            Principal:
              Service:
                - config.amazonaws.com
            Action: s3:PutObject
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${LogBucket}/AWSLogs/${AWS::AccountId}/*"
          - Sid: AWSLogBucketSecureTransport
            Action:
              - s3:*
            Effect: Deny
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${LogBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${LogBucket}/*"
            Principal: "*"
            Condition:
              Bool:
                aws:SecureTransport:
                  false

  # SNS Topic (for config snapshot)
  ConfigTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "config-topic-${AWS::AccountId}"
      DisplayName: AWS Config Notification Topic
      KmsMasterKeyId: "alias/aws/sns"

  # SNS Topic Policy
  ConfigTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref ConfigTopic
      PolicyDocument:
        Statement:
          - Sid: AWSConfigSNSPolicy
            Action:
              - sns:Publish
            Effect: Allow
            Resource: !Ref ConfigTopic
            Principal:
              Service:
                - config.amazonaws.com

  # IAM Role (for aws config recorder)
  ConfigRecorderRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - config.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AWS_ConfigRole"
  
  # AWS Config - Recorder
  ConfigRecorder:
    Type: AWS::Config::ConfigurationRecorder
    DependsOn:
      - LogBucketPolicy
    Properties:
      RoleARN: !GetAtt ConfigRecorderRole.Arn
      RecordingGroup:
        AllSupported: true
        IncludeGlobalResourceTypes: true
        # ResourceTypes: !If
        #   - IsAllSupported
        #   - !Ref AWS::NoValue
        #   - !Ref ResourceTypes
  
  # AWS Config - Deliver to SNS Topic
  ConfigDeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    DependsOn:
      - LogBucketPolicy
    Properties:
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: One_Hour # One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours
      S3BucketName: !Ref LogBucket
      SnsTopicARN: !Ref ConfigTopic